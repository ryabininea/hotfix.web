{"ast":null,"code":"var _jsxFileName = \"/home/riget/web/hotfix.web/src/App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Redirect, Switch, Route } from 'react-router-dom';\nimport Home from './panels/Home';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\nconst FOOD_AREAS = [{\n  id: 'pizikiva-gallery',\n  name: 'ТРЦ \"Им.Пыжикова\"',\n  items: [{\n    id: 'kfc',\n    name: 'KFC',\n    link: '/place/pizikiva-gallery/kfc',\n    description: 'Сеть ресторанов быстрого питания',\n    image: kfc,\n    foods: [{\n      id: 'classic',\n      image: FourTowar,\n      name: 'Классик',\n      price: 150\n    }, {\n      id: 'UnchainedPotato',\n      image: OneTowar,\n      name: 'Картофель фри',\n      price: 50\n    }]\n  }, {\n    id: 'burger-king',\n    name: 'Burger King',\n    link: '/place/pizikiva-gallery/burger-king',\n    description: 'Сеть ресторанов быстрого питания',\n    image: burger,\n    foods: [{\n      id: 'OneTowar',\n      name: 'Товар № 1',\n      composition: 'Состав: по ГОСТу',\n      price: 630,\n      image: OneTowar\n    }, {\n      id: 'TwoTowar',\n      name: 'Товар № 2',\n      composition: 'Состав: по ГОСТу',\n      price: 450,\n      image: TwoTowar\n    }, {\n      id: 'ThreeTowar',\n      name: 'Товар № 3',\n      composition: 'Состав: по ГОСТу',\n      price: 800,\n      image: ThreeTowar\n    }, {\n      id: 'FourthTowar',\n      name: 'Товар № 4',\n      composition: 'Состав по ГОСТу',\n      price: 600,\n      image: FourTowar\n    }]\n  }, {\n    id: 'macdac',\n    name: 'McDonal\\'s',\n    link: '/place/pizikiva-gallery/macdac',\n    description: 'Сеть ресторанов быстрого питания',\n    image: mcdac,\n    foods: [{\n      id: 'hamburger',\n      image: TwoTowar,\n      name: 'Гамбургер',\n      price: 50\n    }, {\n      id: 'bigmac',\n      image: ThreeTowar,\n      name: 'Биг мак',\n      price: 200\n    }]\n  }, {\n    id: 'subway',\n    name: 'SubWay',\n    link: '/place/pizikiva-gallery/subway',\n    image: sub,\n    description: 'Сеть ресторанов быстрого питания',\n    foods: [{\n      id: 'melt-sub',\n      image: ThreeTowar,\n      name: 'Сабвей мелт',\n      price: 300\n    }, {\n      id: 'day-sub',\n      image: OneTowar,\n      name: 'Саб дня',\n      price: 200\n    }]\n  }]\n}];\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach(item => {\n    result[item.link] = item;\n  });\n  return result;\n}, {});\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n  area.items.forEach(item => {\n    item.foods.forEach(food => {\n      result[food.id] = food;\n    });\n  });\n  return result;\n}, {});\n\nconst App = () => {\n  const [orderStatuses, setOrderStatuses] = useState(JSON.parse(localStorage.getItem('orderStatuses') || 'null') || {});\n  const [orderBaskets, setOrderBaskets] = useState(JSON.parse(localStorage.getItem('orderBaskets') || 'null') || {});\n  const [order, setOrder] = useState(JSON.parse(localStorage.getItem('orders') || 'null') || {});\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/order/:areaId/:itemId\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, Object.keys(order).length === 0 && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Order, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    setActiveOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = 'ACTIVE';\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/basket/:areaId/:itemId\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Basket, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    orderBaskets: orderBaskets,\n    editBasket: ({\n      id,\n      faster,\n      selfService,\n      time\n    }) => {\n      const nextBaskets = { ...orderBaskets\n      };\n\n      if (faster === undefined) {\n        faster = nextBaskets[id].faster;\n      }\n\n      if (selfService === undefined) {\n        selfService = nextBaskets[id].selfService;\n      }\n\n      console.log(time);\n\n      if (time === undefined) {\n        time = nextBaskets[id].time;\n      } else {\n        time = time.replace(\"/[^0-9:-]/\", \"\");\n      } // if(time === '') {\n      // \tfaster = true\n      // }\n\n\n      nextBaskets[id].faster = faster;\n      nextBaskets[id].selfService = selfService;\n      nextBaskets[id].time = time;\n      setOrderBaskets(nextBaskets);\n      localStorage.setItem('orderBaskets', JSON.stringify(nextBaskets));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/orders\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Orders, {\n    order: order,\n    orderStatuses: orderStatuses,\n    foodAreas: FOOD_AREAS,\n    setFinishedOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = 'CANCELED';\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n    },\n    setActiveOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = 'ACTIVE';\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/place/:area/:place\",\n    render: routeProps => {\n      return /*#__PURE__*/React.createElement(Place, Object.assign({}, routeProps, {\n        item: placesMap[routeProps.location.pathname],\n        area: FOOD_AREAS[0],\n        order: order,\n        onIncrementPosition: ({\n          id,\n          itemId,\n          areaId\n        }) => {\n          const updatedOrder = { ...order\n          };\n\n          if (id in updatedOrder) {\n            updatedOrder[id].count++;\n          } else {\n            updatedOrder[id] = {\n              item: foodsMap[id],\n              count: 1\n            };\n          }\n\n          const nextBaskets = { ...orderBaskets\n          };\n\n          if (itemId in nextBaskets) {} else {\n            nextBaskets[itemId] = {\n              faster: true,\n              selfService: false,\n              time: ''\n            };\n          }\n\n          let nextOrderStatuses = { ...orderStatuses\n          };\n\n          if (Object.keys(nextOrderStatuses).length === 0) {\n            FOOD_AREAS.forEach(area => {\n              area.items.forEach(item => {\n                item.foods.forEach(food => {\n                  if (food.id in order) {\n                    const status = item.id === itemId ? 'ACTIVE' : 'DONE';\n                    nextOrderStatuses[item.id] = status;\n                  }\n                });\n              });\n            });\n          }\n\n          const serialized = JSON.stringify(updatedOrder);\n          localStorage.setItem('orders', serialized);\n          localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n          localStorage.setItem('orderBaskets', JSON.stringify(nextBaskets));\n          setOrder(updatedOrder);\n          setOrderStatuses(nextOrderStatuses);\n          setOrderBaskets(nextBaskets);\n        },\n        onDecrementPosition: ({\n          id,\n          itemId,\n          areaId\n        }) => {\n          const updatedOrder = { ...order\n          };\n\n          if (id in updatedOrder) {\n            if (updatedOrder[id].count === 1) {\n              delete updatedOrder[id];\n            } else {\n              updatedOrder[id].count--;\n            }\n          }\n\n          let nextOrderStatuses = { ...orderStatuses\n          };\n\n          if (Object.keys(nextOrderStatuses).length === 0) {\n            FOOD_AREAS.forEach(area => {\n              area.items.forEach(item => {\n                item.foods.forEach(food => {\n                  if (food.id in order) {\n                    const status = item.id === itemId ? 'ACTIVE' : 'DONE';\n                    nextOrderStatuses[item.id] = status;\n                  }\n                });\n              });\n            });\n          }\n\n          const serialized = JSON.stringify(updatedOrder);\n          localStorage.setItem('orders', serialized);\n          localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n          setOrder(updatedOrder);\n          setOrderStatuses(nextOrderStatuses);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/riget/web/hotfix.web/src/App.js"],"names":["React","useState","BrowserRouter","Router","Redirect","Switch","Route","Home","Place","Basket","Order","Orders","kfc","burger","mcdac","sub","OneTowar","TwoTowar","ThreeTowar","FourTowar","FOOD_AREAS","id","name","items","link","description","image","foods","price","composition","placesMap","reduce","result","area","forEach","item","foodsMap","food","App","orderStatuses","setOrderStatuses","JSON","parse","localStorage","getItem","orderBaskets","setOrderBaskets","order","setOrder","Object","keys","length","itemId","nextStatuses","setItem","stringify","faster","selfService","time","nextBaskets","undefined","console","log","replace","routeProps","location","pathname","areaId","updatedOrder","count","nextOrderStatuses","status","serialized"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Redirect, Switch, Route } from 'react-router-dom';\n\nimport Home from './panels/Home';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\n\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\n\n\nconst FOOD_AREAS = [{\n\tid: 'pizikiva-gallery',\n\tname: 'ТРЦ \"Им.Пыжикова\"',\n\titems: [{\n\t\tid: 'kfc',\n\t\tname: 'KFC',\n\t\tlink: '/place/pizikiva-gallery/kfc',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: kfc,\n\t\tfoods: [{\n\t\t\tid: 'classic',\n\t\t\timage: FourTowar,\n\t\t\tname: 'Классик',\n\t\t\tprice: 150,\n\t\t}, {\n\t\t\tid: 'UnchainedPotato',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Картофель фри',\n\t\t\tprice: 50,\n\t\t}],\n\t}, {\n\t\tid: 'burger-king',\n\t\tname: 'Burger King',\n\t\tlink: '/place/pizikiva-gallery/burger-king',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: burger,\n\t\tfoods: [{\n\t\t\tid: 'OneTowar',\n\t\t\tname: 'Товар № 1',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 630,\n\t\t\timage: OneTowar,\n\t\t}, {\n\t\t\tid: 'TwoTowar',\n\t\t\tname: 'Товар № 2',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 450,\n\t\t\timage: TwoTowar,\n\t\t}, {\n\t\t\tid: 'ThreeTowar',\n\t\t\tname: 'Товар № 3',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 800,\n\t\t\timage: ThreeTowar,\n\t\t}, {\n\t\t\tid: 'FourthTowar',\n\t\t\tname: 'Товар № 4',\n\t\t\tcomposition: 'Состав по ГОСТу',\n\t\t\tprice: 600,\n\t\t\timage: FourTowar,\n\t\t}],\n\t}, {\n\t\tid: 'macdac',\n\t\tname: 'McDonal\\'s',\n\t\tlink: '/place/pizikiva-gallery/macdac',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: mcdac,\n\t\tfoods: [{\n\t\t\tid: 'hamburger',\n\t\t\timage: TwoTowar,\n\t\t\tname: 'Гамбургер',\n\t\t\tprice: 50,\n\t\t}, {\n\t\t\tid: 'bigmac',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Биг мак',\n\t\t\tprice: 200,\n\t\t}],\n\t}, {\n\t\tid: 'subway',\n\t\tname: 'SubWay',\n\t\tlink: '/place/pizikiva-gallery/subway',\n\t\timage: sub,\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\tfoods: [{\n\t\t\tid: 'melt-sub',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Сабвей мелт',\n\t\t\tprice: 300,\n\t\t}, {\n\t\t\tid: 'day-sub',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Саб дня',\n\t\t\tprice: 200,\n\t\t}],\n\t}],\n}];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\tresult[item.link] = item;\n\t});\n\n\treturn result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\titem.foods.forEach(food => {\n\t\t\tresult[food.id] = food;\n\t\t});\n\t});\n\n\treturn result;\n}, {});\n\nconst App = () => {\n\tconst [ orderStatuses, setOrderStatuses ] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {});\n\tconst [ orderBaskets, setOrderBaskets ] = useState(JSON.parse((localStorage.getItem('orderBaskets') || 'null')) || {});\n\tconst [ order, setOrder ] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {});\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Home foodAreas={FOOD_AREAS} order={order} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/order/:areaId/:itemId\" exact>\n\n\t\t\t\t\t{Object.keys(order).length === 0 &&\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t}\n\t\t\t\t\t<Order\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/basket/:areaId/:itemId\" exact>\n\t\t\t\t\t<Basket\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBaskets={orderBaskets}\n\t\t\t\t\t\teditBasket={({ id, faster, selfService, time }) => {\n\t\t\t\t\t\t\tconst nextBaskets = {...orderBaskets};\n\n\t\t\t\t\t\t\tif (faster === undefined) {\n\t\t\t\t\t\t\t\tfaster = nextBaskets[id].faster\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (selfService === undefined) {\n\t\t\t\t\t\t\t\tselfService = nextBaskets[id].selfService\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconsole.log(time)\n\n\t\t\t\t\t\t\tif (time === undefined) {\n\t\t\t\t\t\t\t\ttime = nextBaskets[id].time\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttime = time.replace(\"/[^0-9:-]/\",\"\")\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if(time === '') {\n\t\t\t\t\t\t\t// \tfaster = true\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tnextBaskets[id].faster = faster;\n\t\t\t\t\t\t\tnextBaskets[id].selfService = selfService;\n\t\t\t\t\t\t\tnextBaskets[id].time = time;\n\n\n\t\t\t\t\t\t\tsetOrderBaskets(nextBaskets);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderBaskets', JSON.stringify(nextBaskets));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/orders\"\n\t\t\t\t\texact\n\t\t\t\t>\n\t\t\t\t\t<Orders \n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderStatuses={orderStatuses}\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\tsetFinishedOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'CANCELED';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route \n\t\t\t\t\tpath=\"/place/:area/:place\"\n\t\t\t\t\trender={routeProps => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Place\n\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\titem={placesMap[routeProps.location.pathname]}\n\t\t\t\t\t\t\t\tarea={FOOD_AREAS[0]}\n\t\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\t\tonIncrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count++;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id] = {\n\t\t\t\t\t\t\t\t\t\t\titem: foodsMap[id],\n\t\t\t\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst nextBaskets = {...orderBaskets};\n\n\t\t\t\t\t\t\t\t\tif (itemId in nextBaskets) {\n\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tnextBaskets[itemId] = {faster: true, selfService: false, time: ''};\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderBaskets', JSON.stringify(nextBaskets));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t\tsetOrderBaskets(nextBaskets);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDecrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tif (updatedOrder[id].count === 1) {\n\t\t\t\t\t\t\t\t\t\t\tdelete updatedOrder[id];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}